name: Coto.Stuio - Hugo Build and Deploy to Linode Ojebect Storage

on:
  workflow_call:
    inputs:
      hugo-environment:
        required: false
        default: "production"
        type: string
    secrets:
      obj-access-key:
        required: true
      obj-secret-key:
        required: true

env:
  obj-region: "us-east-1"
  obj-bucket: "s3://${{ github.event.repository.name }}"
  obj-target: "${{ github.ref_name }}"
  hugo-source: "public"

jobs:
  deploy:
    name: Build A Hugo Site And Deploy to Linode Ojebect Storage
    runs-on: ubuntu-latest
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "0.136.0"
          extended: true

      - name: Setup Python
        if: ${{ env.ACT }}
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.12"

      - name: Set up s3cmd
        uses: s3-actions/s3cmd@v1.9.0
        with:
          provider: linode # default is linode
          region: ${{ env.obj-region }}
          access_key: ${{ secrets.obj-access-key }}
          secret_key: ${{ secrets.obj-secret-key }}

      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Build Hugo Site
        run: hugo --minify --environment ${{ inputs.hugo-environment }}

      - name: Find files matching "404.html"
        run: echo "file=$(find ${{ env.hugo-source }} -name '404.html' | head -n 1)" >> "$GITHUB_OUTPUT"
        id: find_files

      - name: Check if bucket exsits
        id: check_bucket
        run: s3cmd info ${{ env.obj-bucket }}
        continue-on-error: true

      - name: Create bucket and setacl to public
        run: |
          s3cmd mb ${{ env.obj-bucket }}
          s3cmd setacl ${{ env.obj-bucket }} --acl-public
        if: ${{ failure() && steps.check_bucket.conclusion == 'failure' }}

      - name: "Copy files in ${{ env.hugo-source }}/ to ${{ env.obj-bucket }}/${{ env.obj-target }}/"
        run: |
          s3cmd --no-mime-magic --acl-public sync ${{ env.hugo-source }}/ ${{ env.obj-bucket }}/${{ env.obj-target }}/

      - name: Overwrite 404.html with ${{ steps.ff.outputs.stdout }}
        if: inputs.hugo-environment == 'production'
        run: s3cmd --no-mime-magic --acl-public sync ${{ steps.find_files.outputs.file }} ${{ env.obj-bucket }}/

      - name: Create Object Storage website
        run: |
          s3cmd ws-create --ws-index=index.html --ws-error=404.html ${{ env.obj-bucket }}
          s3cmd ws-info ${{ env.obj-bucket }}
