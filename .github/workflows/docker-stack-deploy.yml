name: Docker Stack Deploy

on:
  workflow_call:
    inputs:
      vault-id:
        required: true
        type: string
      item-id:
        required: true
        type: string
      image-name:
        required: true
        type: string
      stack-name:
        required: true
        type: string
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        required: true

permissions:
  packages: write

jobs:
  deploy-image:
    name: Docker Stack Deploy
    runs-on: ubuntu-latest
    steps:
      - name: OP Load secrets
        id: op-load-secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          # Workflow
          WORKFLOWS_PAT: "op://Coto.Studio - Deploy/dvdxlvxhkphndlusdv7gecvenq/credential"
          TS_OAUTH_CLIENT_ID: "op://Coto.Studio - Deploy/hhiitsau5hvn3mzvitvco2pysu/Client ID"
          TS_OAUTH_SECRET: "op://Coto.Studio - Deploy/hhiitsau5hvn3mzvitvco2pysu/credential"
          PUSHOVER_USER_KEY: "op://Coto.Studio - Deploy/2a5qvqntw53n5i7rei4yv3e72u/credential"
          PUSHOVER_API_TOKEN_DOCKER: "op://Coto.Studio - Deploy/2a5qvqntw53n5i7rei4yv3e72u/Docker Swarm/API Token"
          DEPLOY_HOST: "op://${{ inputs.vault-id }}/${{ inputs.item-id }}/deploy/host"
          DEPLOY_USER: "op://${{ inputs.vault-id }}/${{ inputs.item-id }}/deploy/user"

      - name: Tailscale
        uses: Coto-Studio/tailscale-action@main
        if: ${{ github.event.act }} # use during local actions testing
        with:
          oauth-client-id: $TS_OAUTH_CLIENT_ID
          oauth-secret: $TS_OAUTH_SECRET
          tags: tag:cicd
          args: --accept-dns
          use-cache: "true"

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        if: ${{ !github.event.act }} # skip during local actions testing
        with:
          oauth-client-id: $TS_OAUTH_CLIENT_ID
          oauth-secret: $TS_OAUTH_SECRET
          tags: tag:cicd
          args: --accept-dns
          use-cache: "true"

      - uses: actions/checkout@v4
        with:
          token: ${{ env.WORKFLOWS_PAT }}

      - name: Create docker-stack file
        run: op inject -i docker-stack-op.yaml.tpl -o docker-stack-op.yaml

      - name: Docker Stack Deploy
        uses: Coto-Studio/stack-deploy-action@master
        with:
          name: ${{ inputs.stack-name }}
          file: docker-stack-op.yaml
          host: ${{ env.DEPLOY_HOST }}
          user: ${{ env.DEPLOY_USER }}
          tailscale: true
          registry_auth: true
          registry_host: https://ghcr.io
          registry_user: ${{ github.actor }}
          registry_pass: ${{ env.WORKFLOWS_PAT }}

      - name: pushover-actions
        uses: umahmood/pushover-actions@main
        env:
          PUSHOVER_TOKEN: ${{ env.PUSHOVER_API_TOKEN_GITHUB }}
          PUSHOVER_USER: ${{ env.PUSHOVER_USER_KEY }}
        with:
          status: ${{ job.status }}
          title: "${{ github.workflow }}"
          message: "The GitHub Workflow, ${{ github.workflow }} was run for the repository ${{ github.repository }} with the status of ${{ job.status }}."
