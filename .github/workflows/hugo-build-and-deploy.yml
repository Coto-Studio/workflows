name: Coto.Stuio - Hugo Build and Deploy to Linode Ojebect Storage

on:
  workflow_call:
    secrets:
      obj-access-key:
        required: true
      obj-secret-key:
        required: true

env:
  obj-region: "us-east-1"
  obj-bucket: "s3://${{ github.event.repository.name }}"
  obj-target: "${{ github.ref_name }}"
  hugo-source: "public"

jobs:
  deploy:
    name: Build A Hugo Site And Deploy to Linode Ojebect Storage
    runs-on: ubuntu-latest
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"
          extended: true

      - name: Set up s3cmd
        uses: s3-actions/s3cmd@v1.5.0
        with:
          provider: linode # default is linode
          region: ${{ env.obj-region }}
          access_key: ${{ secrets.obj-access-key }}
          secret_key: ${{ secrets.obj-secret-key }}

      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Set envionment param to beta
        run: echo "hugo-environment=beta" >> $GITHUB_ENV
        if: github.ref_name == 'dev'

      - name: Set envionment param to production
        run: echo "hugo-environment=production" >> $GITHUB_ENV
        if: github.ref_name == 'main'

      - name: Build Hugo Site
        run: hugo --minify --environment ${{ env.hugo-environment }}

      - name: Find files matching "404.html"
        uses: jeertmans/filesfinder@latest
        id: ff # Any id, to be used later to reference to files output
        with:
          # Only argument, a single string, to be passed as arguments to ff.
          # See `ff --help` for more help.
          # Default: "*"
          args: "${{ env.hugo-source }}/*404.html"

      - name: Create bucket and setacl to public
        run: |
          s3cmd mb ${{ env.obj-bucket }}
          s3cmd setacl ${{ env.obj-bucket }} --acl-public

      - name: "Copy files in ${{ env.hugo-source }}/ to ${{ env.obj-bucket }}/${{ env.obj-target }}/"
        run: |
          s3cmd --no-mime-magic --acl-public sync ${{ env.hugo-source }}/ ${{ env.obj-bucket }}/${{ env.obj-target }}/
          s3cmd --no-mime-magic --acl-public sync ${{ steps.ff.outputs.files[0] }} ${{ env.obj-bucket }}/

      - name: Overwrite 404.html if production site
        if: github.ref_name == 'main'
        run: s3cmd --no-mime-magic --acl-public sync ${{ env.hugo-source }}/404.html ${{ env.obj-bucket }}/

      - name: Create Object Storage website
        run: |
          s3cmd ws-create --ws-index=index.html --ws-error=404.html ${{ env.obj-bucket }}
          s3cmd ws-info ${{ env.obj-bucket }}
